#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
#include<dos.h>

//Function to print WELCOME
void welcome_screen1()
{
clrscr();
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(100);
printf(" ±±±±±  ±±±±±±±±±±  ±±±±        ±±±±  ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(100);
printf(" ±±±±±  ±±±±±±±±±±  ±±±± ±±±±±±±±±±±  ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(100);
printf(" ±±±±±  ±±±±  ±±±±  ±±±±        ±±±±  ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(100);
printf(" ±±±±±  ±±±±  ±±±±  ±±±± ±±±±±±±±±±±  ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(100);
printf(" ±±±±±              ±±±±        ±±±±         ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(100);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(100);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±         ±±±±         ±±±              ±±        ±±±±\n");
delay(100);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±  ±±±±±±±±±±±  ±±±±±  ±±±  ±±±±  ±±±±  ±±  ±±±±±±±±±±\n");
delay(100);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±  ±±±±±±±±±±±  ±±±±±  ±±±  ±±±±  ±±±±  ±±  ±±±±±±±±±±\n");
delay(100);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±  ±±±±±±±±±±±  ±±±±±  ±±±  ±±±±  ±±±±  ±±        ±±±±\n");
delay(100);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±  ±±±±±±±±±±±  ±±±±±  ±±±  ±±±±±±±±±±  ±±  ±±±±±±±±±±\n");
delay(100);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±         ±±±±         ±±±  ±±±±±±±±±±  ±±        ±±±±\n");
delay(100);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");


}

//Function to print NUMBER CHASE
void welcome_screen2()
{
clrscr();
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(100);
printf(" ±±±   ±±±±  ±±±  ±±±±±±  ±±±              ±±        ±±±        ±±±        ±±±±\n");
delay(100);
printf(" ±±±  ± ±±±  ±±±  ±±±±±±  ±±±  ±±±±  ±±±±  ±±  ±±±±± ±±±  ±±±±±±±±±  ±±±±± ±±±±\n");
delay(100);
printf(" ±±±  ±± ±±  ±±±  ±±±±±±  ±±±  ±±±±  ±±±±  ±±  ±±±±± ±±±  ±±±±±±±±±  ±±±±± ±±±±\n");
delay(100);
printf(" ±±±  ±±± ±  ±±±  ±±±±±±  ±±±  ±±±±±±±±±±  ±±        ±±±        ±±±        ±±±±\n");
delay(100);
printf(" ±±±  ±±±±   ±±±  ±±±±±±  ±±±  ±±±±±±±±±±  ±±  ±±±±± ±±±  ±±±±±±±±±  ±±±±± ±±±±\n");
delay(100);
printf(" ±±±  ±±±±±  ±±±          ±±±  ±±±±±±±±±±  ±±        ±±±        ±±±  ±±±±± ±±±±\n");
delay(100);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(100);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(100);
printf(" ±±±±±±±±        ±±±±  ±±±±±±  ±±±±          ±±±±±         ±±±±         ±±±±±±±\n");
delay(100);
printf(" ±±±±±±±±  ±±±±±±±±±±  ±±±±±±  ±±±±  ±±±±±±  ±±±±±  ±±±±±±±±±±±  ±±±±±±±±±±±±±±\n");
delay(100);
printf(" ±±±±±±±±  ±±±±±±±±±±  ±±±±±±  ±±±±  ±±±±±±  ±±±±±  ±±±±±±±±±±±  ±±±±±±±±±±±±±±\n");
delay(100);
printf(" ±±±±±±±±  ±±±±±±±±±±          ±±±±          ±±±±±         ±±±±         ±±±±±±±\n");
delay(100);
printf(" ±±±±±±±±  ±±±±±±±±±±  ±±±±±±  ±±±±  ±±±±±±  ±±±±±±±±±±±±  ±±±±  ±±±±±±±±±±±±±±\n");
delay(100);
printf(" ±±±±±±±±        ±±±±  ±±±±±±  ±±±±  ±±±±±±  ±±±±±         ±±±±         ±±±±±±±\n");
delay(100);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");

}

//Function to print LEVEL 1
void screen1()
{
clrscr();
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(80);
printf(" ±±±±±±  ±±±±±±±±±±±         ±±±±  ±±±±±±±±±  ±±±         ±±±±  ±±±±±±±±±±±±±±\n");
delay(80);
printf(" ±±±±±±  ±±±±±±±±±±±  ±±±±±±±±±±±±  ±±±±±±±  ±±±±  ±±±±±±±±±±±  ±±±±±±±±±±±±±±\n");
delay(80);
printf(" ±±±±±±  ±±±±±±±±±±±  ±±±±±±±±±±±±±  ±±±±±  ±±±±±  ±±±±±±±±±±±  ±±±±±±±±±±±±±±\n");
delay(80);
printf(" ±±±±±±  ±±±±±±±±±±±        ±±±±±±±±  ±±±  ±±±±±±        ±±±±±  ±±±±±±±±±±±±±±\n");
delay(80);
printf(" ±±±±±±  ±±±±±±±±±±±  ±±±±±±±±±±±±±±±  ±  ±±±±±±±  ±±±±±±±±±±±  ±±±±±±±±±±±±±±\n");
delay(80);
printf(" ±±±±±±         ±±±±         ±±±±±±±±±  ±±±±±±±±±         ±±±±          ±±±±±±\n");
delay(80);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(80);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(80);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±  ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(80);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±  ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(80);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±  ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(80);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±  ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(80);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±  ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(80);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±  ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(80);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±  ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(80);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(50);
printf(" ±±±±±±  ±±±±±±±       ±±±        ±±  ±±±       ±±±±±±       ±±±        ±±  ±±\n");
delay(50);
printf(" ±±±±±±  ±±±±±±±  ±±±±±±±±±±±  ±±±±±±±±±±  ±±±±±±±±±±±  ±±±±±±±±  ±±±±  ±±  ±±\n");
delay(50);
printf(" ±±±±±±  ±±±±±±±       ±±±±±±  ±±±±±±±±±±       ±±±±±±  ±±    ±±  ±±±±  ±±  ±±\n");
delay(50);
printf(" ±±±±±±  ±±±±±±±  ±±±±±±±±±±±  ±±±±±±±±±±±±±±±  ±±±±±±  ±±±±  ±±  ±±±±  ±±±±±±\n");
delay(50);
printf(" ±±±±±±       ±±       ±±±±±±  ±±±±±±±±±±       ±±±±±±        ±±        ±±  ±±\n");
delay(50);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");

}

//Function to print LEVEL 2
void screen2()
{
clrscr();
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(50);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(50);
printf(" ±±±±±±  ±±±±±±±±±±±         ±±±±  ±±±±±±±±±  ±±±         ±±±±  ±±±±±±±±±±±±±±\n");
delay(70);
printf(" ±±±±±±  ±±±±±±±±±±±  ±±±±±±±±±±±±  ±±±±±±±  ±±±±  ±±±±±±±±±±±  ±±±±±±±±±±±±±±\n");
delay(70);
printf(" ±±±±±±  ±±±±±±±±±±±  ±±±±±±±±±±±±±  ±±±±±  ±±±±±  ±±±±±±±±±±±  ±±±±±±±±±±±±±±\n");
delay(70);
printf(" ±±±±±±  ±±±±±±±±±±±        ±±±±±±±±  ±±±  ±±±±±±        ±±±±±  ±±±±±±±±±±±±±±\n");
delay(70);
printf(" ±±±±±±  ±±±±±±±±±±±  ±±±±±±±±±±±±±±±  ±  ±±±±±±±  ±±±±±±±±±±±  ±±±±±±±±±±±±±±\n");
delay(70);
printf(" ±±±±±±         ±±±±         ±±±±±±±±±  ±±±±±±±±±         ±±±±          ±±±±±±\n");
delay(70);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(50);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(60);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±          ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(60);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±  ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(60);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±  ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(60);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±          ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(60);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±  ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(60);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±  ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(60);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±          ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(60);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(40);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(40);
printf(" ±±±±±±±        ±±±±        ±±±±         ±±±±±  ±±±±   ±±±±  ±±±±        ±±±±±\n");
delay(40);
printf(" ±±±±±±±  ±±±±± ±±±±  ±±±±±±±±±±  ±±±±±±±±±±±±  ±±±±  ± ±±±  ±±±±  ±±±±±±±±±±±\n");
delay(40);
printf(" ±±±±±±±        ±±±±       ±±±±±  ±±±±    ±±±±  ±±±±  ±± ±±  ±±±±        ±±±±±\n");
delay(40);
printf(" ±±±±±±±  ±±±±± ±±±±  ±±±±±±±±±±  ±±±±±±  ±±±±  ±±±±  ±±± ±  ±±±±±±±±±±  ±±±±±\n");
delay(40);
printf(" ±±±±±±±        ±±±±        ±±±±          ±±±±  ±±±±  ±±±±   ±±±±        ±±±±±\n");
delay(40);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");


}

//Function to print LEVEL 3
void screen3()
{
clrscr();
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(70);
printf(" ±±±±±±  ±±±±±±±±±±±         ±±±±  ±±±±±±±±±  ±±±         ±±±±  ±±±±±±±±±±±±±±\n");
delay(70);
printf(" ±±±±±±  ±±±±±±±±±±±  ±±±±±±±±±±±±  ±±±±±±±  ±±±±  ±±±±±±±±±±±  ±±±±±±±±±±±±±±\n");
delay(70);
printf(" ±±±±±±  ±±±±±±±±±±±  ±±±±±±±±±±±±±  ±±±±±  ±±±±±  ±±±±±±±±±±±  ±±±±±±±±±±±±±±\n");
delay(70);
printf(" ±±±±±±  ±±±±±±±±±±±        ±±±±±±±±  ±±±  ±±±±±±        ±±±±±  ±±±±±±±±±±±±±±\n");
delay(70);
printf(" ±±±±±±  ±±±±±±±±±±±  ±±±±±±±±±±±±±±±  ±  ±±±±±±±  ±±±±±±±±±±±  ±±±±±±±±±±±±±±\n");
delay(70);
printf(" ±±±±±±         ±±±±         ±±±±±±±±±  ±±±±±±±±±         ±±±±          ±±±±±±\n");
delay(70);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(50);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(50);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±          ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(40);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±  ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(40);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±  ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(40);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±         ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(40);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±  ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(40);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±  ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(40);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±          ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(40);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");
delay(50);
printf(" ±±±±±±±±±±        ±±±±±  ±±±±±   ±±±±  ±±±±±         ±±±±  ±±±±±±±±±±±±±±±±±±\n");
delay(50);
printf(" ±±±±±±±±±±  ±±±±±±±±±±±  ±±±±±  ± ±±±  ±±±±±  ±±±±±  ±±±±  ±±±±±±±±±±±±±±±±±±\n");
delay(50);
printf(" ±±±±±±±±±±       ±±±±±±  ±±±±±  ±± ±±  ±±±±±         ±±±±  ±±±±±±±±±±±±±±±±±±\n");
delay(50);
printf(" ±±±±±±±±±±  ±±±±±±±±±±±  ±±±±±  ±±± ±  ±±±±±  ±±±±±  ±±±±  ±±±±±±±±±±±±±±±±±±\n");
delay(50);
printf(" ±±±±±±±±±±  ±±±±±±±±±±±  ±±±±±  ±±±±   ±±±±±  ±±±±±  ±±±±         ±±±±±±±±±±±\n");
delay(50);
printf(" ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±\n");

}

//Function for terminating the game
void terminate()
{
    int x,y;
    textcolor(0);
    for(y=24;y>=1;y--)
    {
	for(x=1;x<=79;x++)
	{
	    gotoxy(x,y);
	    cprintf("%c",177);
	}
	delay(50);
    }
}

//Printing the end screen
void end_screen()
{
    clrscr();
    textcolor(1);
    int x,y;
    for(x=1;x<=79;x++)
    {
	gotoxy(x,1);
	cprintf("%c",2);
	gotoxy(x,24);
	cprintf("%c",2);
    }
    for(y=1;y<=24;y++)
    {
	gotoxy(1,y);
	cprintf("%c",2);
	gotoxy(79,y);
	cprintf("%c",2);
    }
    gotoxy(29,7);
    cprintf("THANKS FOR USING");
    gotoxy(35,10);
    cprintf("THIS");
    gotoxy(27,13);
    cprintf("SOFTWARE - NUMBER CHASE");
    gotoxy(60,16);
    cprintf("DEVELOPED BY");
    gotoxy(60,18);
    cprintf("VISHAL BANSAL");
    gotoxy(62,20);
    cprintf("GUIDED BY");
    gotoxy(58,22);
    cprintf("MR. ASHOK BHARDWAJ");
    delay(1500);
    textcolor(7+128);
    gotoxy(30,23);
    cprintf("Press esc to Exit");
}

//Printing the box for the screen
void box()
{
    int x,y;
    for(x=1;x<=79;x++)
    {
	gotoxy(x,1);
	cprintf("%c",205);
	gotoxy(x,24);
	cprintf("%c",205);
	textcolor(0);
    }
    for(y=1;y<=24;y++)
    {
	gotoxy(1,y);
	cprintf("%c",186);
	gotoxy(79,y);
	cprintf("%c",186);
	textcolor(0);
	gotoxy(63,y);
	cprintf("%c",186);
    }
    gotoxy(1,1);
    printf("%c",201);
    gotoxy(79,1);
    printf("%c",187);
    gotoxy(79,24);
    printf("%c",188);
    gotoxy(1,24);
    printf("%c",200);
    gotoxy(63,1);
    printf("%c",203);
    gotoxy(63,24);
    printf("%c",202);
    gotoxy(65,2);
    textcolor(0);
    cprintf("S  C  O  R  E");
}

//Function for printing the instructions
void Instructions()
{
    int x,y;
    textcolor(0);
    gotoxy(66,8);
    cprintf("%c  :  UP",30);
    gotoxy(66,10);
    cprintf("%c  :  DOWN",31);
    gotoxy(66,12);
    cprintf("%c  :  RIGHT",16);
    gotoxy(66,14);
    cprintf("%c  :  LEFT",17);
    gotoxy(65,16);
    cprintf("esc :  EXIT");
    gotoxy(65,18);
    cprintf("%c :  GAME OVER",2);
}

//Function for generating a random number
void number(int &x,int &y,int &n)
{
    randomize();
    x=(rand()%60)+3;
    y=(rand()%20)+3;
    gotoxy(x,y);
    randomize();
    n=rand()%10;

    // Displaying that number on screen
    gotoxy(x,y);
    textcolor(1);
    cprintf("%d",n);

}

//Function for Level 1 Game
void level1(int x,int y,int k)
{
    int row,col,num;
    int count=0,score=0;
    int count1=0;

    // calling the function to generate a random number
    // random col and random row number with reference

    number(row,col,num);

    //initial score
    gotoxy(70,4);
    textcolor(1);
    cprintf("%d",score);

    //Instructions to play the game
    Instructions();

    num=0;
    while(1)
    {
	if(kbhit())
	{
	    k=getch();
	}
	if(k==27)
	  break;

	box();
	textcolor(8);
	gotoxy(x,y);
	cprintf("%c",177);
	delay(100);
	gotoxy(x,y);
	printf(" ");

	   if(num==0)
	   {
	       textcolor(1);
	       gotoxy(row,col);
	       cprintf("%c",2);
	       if(count<=40)
	       {
		   count++;
	       }
	       else
	       {
		   gotoxy(row,col);
		   printf(" ");
		   number(row,col,num);
	       }
	   }
	   else
	   {
	       count=0;
	   }

	   if(num>=1 && num<=9)
	   {
	       if(count1<=50)
	       {
		   count1++;
	       }
	       else
	       {
		   gotoxy(row,col);
		   printf(" ");
		   number(row,col,num);
		   count1=0;
	       }
	   }
	   else
	   {
	       count1=0;
	   }

	   //checking for the cursor position
	   if((x==row) && (y==col))
	   {
	       if(num==0)
	       {
		   gotoxy(27,12);
		   textcolor(1+128);
		   cprintf("GAME OVER");
		   delay(1000);
		   terminate();
		   exit(k=0);
	       }
	       else
	       {
		   score=score+num;
		   gotoxy(70,4);
		   textcolor(1);
		   cprintf("%d",score);
		   if(score>=5)
		   {
		       for(x=17;x<=50;x++)
		       {
			   textcolor(0);
			   gotoxy(x,11);
			   cprintf("%c",205);
			   gotoxy(x,15);
			   cprintf("%c",205);
		       }
		       for(y=11;y<=15;y++)
		       {
			   gotoxy(17,y);
			   cprintf("%c",186);
			   gotoxy(50,y);
			   cprintf("%c",186);
		       }
		       gotoxy(17,11);
		       cprintf("%c",201);
		       gotoxy(50,11);
		       cprintf("%c",187);
		       gotoxy(50,15);
		       cprintf("%c",188);
		       gotoxy(17,15);
		       cprintf("%c",200);
		       gotoxy(21,12);
		       textcolor(1);
		       cprintf("******CONGRATULATIONS******");
		       delay(1000);
		       textcolor(1+128);
		       gotoxy(26,14);
		       cprintf("LEVEL 1 COMPLETED");
		       delay(1000);
		       textcolor(0);
		       gotoxy(21,22);
		       cprintf("Press ENTER for next level");
		       getch();
		       break;
		   }
		   else
		   {
		       number(row,col,num);
		   }
	       }
	   }



	if(k==77)    //right arrow
	  x++;
	if(k==80)    //downward arrow
	  y++;
	if(k==75)    //left arrow
	  x--;
	if(k==72)    // upward arrow
	  y--;
	if(x>62)
	  x=3;
	if(x<3)
	  x=62;
	if(y>23)
	  y=2;
	if(y<1)
	  y=23;

    }
}

//Function for LEVEL 2 GAME
void level2(int x,int y,int k)
{
   clrscr();
   box();
   int row,col;
   int num,score=0;
   int count=0,count1=0;

   //printing the instructions
   Instructions();

   //printing the hurdles
   for(y=2;y<=8;y++)
   {
       textcolor(4);
       gotoxy(20,y);
       cprintf("%c",2);
       gotoxy(50,y);
       cprintf("%c",2);
   }
   for(y=17;y<=23;y++)
   {
       textcolor(4);
       gotoxy(10,y);
       cprintf("%c",2);
       gotoxy(40,y);
       cprintf("%c",2);
   }

   number(row,col,num);

    gotoxy(70,4);
    textcolor(1);
    cprintf("%d",score);

    while(1)
    {
	if(kbhit())
	{
	    k=getch();
	}
	if(k==27)
	  break;

	box();
	textcolor(8);
	gotoxy(x,y);
	cprintf("%c",177);
	delay(100);
	gotoxy(x,y);
	printf(" ");

	if((y>=2 && y<=8) && (x==20 || x==50))
	{
	    gotoxy(27,12);
	    textcolor(1);
	    cprintf("GAME OVER");
	    delay(500);
	    terminate();
	    exit(k=0);
	}

	if((y>=17 && y<=23) && (x==10 || x==40))
	{
	    gotoxy(27,12);
	    textcolor(1);
	    cprintf("GAME OVER");
	    delay(500);
	    terminate();
	    exit(k=0);
	}
	if(num==0)
	{
	    gotoxy(row,col);
	    printf("%c",2);
	    if(count<=40)
	    {
		count++;
	    }
	    else
	    {
		gotoxy(row,col);
		printf(" ");
		number(row,col,num);
	    }
	}
	else
	{
	    count=0;
	}

	if(num>=1 && num<=9)
	{
	    if(count1<=50)
	    {
		count1++;
	    }
	    else
	    {
		gotoxy(row,col);
		printf(" ");
		number(row,col,num);
		count1=0;
	    }
	}
	else
	{
	    count1=0;
	}

	//checking for the cursor position
	if((x==row) && (y==col))
	{
	    if(num==0)
	    {
		gotoxy(27,12);
		textcolor(1+128);
		cprintf("GAME OVER");
		delay(1000);
		terminate();
		exit(k=0);
	    }
	    else
	    {
		score=score+num;
		gotoxy(70,4);
		textcolor(1);
		cprintf("%d",score);
		if(score>=10)
		{
		    for(x=17;x<=50;x++)
		    {
			textcolor(0);
			gotoxy(x,10);
			cprintf("%c",205);
			gotoxy(x,14);
			cprintf("%c",205);
		    }
		    for(y=10;y<=14;y++)
		    {
			gotoxy(17,y);
			cprintf("%c",186);
			gotoxy(50,y);
			cprintf("%c",186);
		    }
		    gotoxy(17,10);
		    cprintf("%c",201);
		    gotoxy(50,10);
		    cprintf("%c",187);
		    gotoxy(50,14);
		    cprintf("%c",188);
		    gotoxy(17,14);
		    cprintf("%c",200);
		    gotoxy(21,11);
		    textcolor(1);
		    cprintf("******CONGRATULATIONS******");
		    delay(1000);
		    textcolor(1+128);
		    gotoxy(26,13);
		    cprintf("LEVEL 2 COMPLETED");
		    delay(1000);
		    textcolor(0);
		    gotoxy(20,16);
		    cprintf("Press ENTER for next level");
		    getch();
		    break;
		}
		else
		{
		    number(row,col,num);
		}
	    }
	}

	if(k==77)    //right arrow
	  x++;
	if(k==80)    //downward arrow
	  y++;
	if(k==75)    //left arrow
	  x--;
	if(k==72)    // upward arrow
	  y--;
	if(x>62)
	  x=3;
	if(x<3)
	  x=62;
	if(y>23)
	  y=2;
	if(y<1)
	  y=23;

    }
}
//Function for LEVEL 3 GAME
void level3(int k)
{
    clrscr();
    box();
    int x,y;
    int row,col,num;
    int score=0,count=0,count1=0;

    //printing the instructions
    Instructions();
    //printing the hurdles
    //V
    x=4,y=2;
    for(int i=0;i<=3;i++)
    {
	gotoxy(x,y);
	textcolor(4);
	cprintf("%c",2);
	x++;
	y++;
    }
    x=8,y=4;
    for(i=0;i<=2;i++)
    {
	gotoxy(x,y);
	cprintf("%c",2);
	x++;
	y--;
    }
    //I
    for(y=5;y<=9;y++)
    {
	gotoxy(14,y);
	cprintf("%c",2);
    }
    //S
    for(x=20;x<=25;x++)
    {
	gotoxy(x,8);
	cprintf("%c",2);
	gotoxy(x,11);
	cprintf("%c",2);
    }
    for(y=8;y<=10;y++)
    {
	gotoxy(20,y);
	cprintf("%c",2);
    }
    for(y=12;y<=14;y++)
    {
	gotoxy(25,y);
	cprintf("%c",2);
    }
    for(x=20;x<=24;x++)
    {
	gotoxy(x,14);
	cprintf("%c",2);
    }
    //H
    for(y=12;y<=17;y++)
    {
	gotoxy(30,y);
	cprintf("%c",2);
	gotoxy(37,y);
	cprintf("%c",2);
    }
    for(x=31;x<=36;x++)
    {
	gotoxy(x,15);
	cprintf("%c",2);
    }
    //A
    x=43,y=16;
    for(i=0;i<=4;i++)
    {
	gotoxy(x,y);
	cprintf("%c",2);
	x--;
	y++;
    }
    x=44,y=15;
    for(i=0;i<=5;i++)
    {
	gotoxy(x,y);
	cprintf("%c",2);
	x++;
	y++;
    }
    for(x=41;x<=46;x++)
    {
	gotoxy(x,18);
	cprintf("%c",2);
    }
    //L
    for(y=19;y<=23;y++)
    {
	gotoxy(54,y);
	cprintf("%c",2);
    }
    for(x=55;x<=59;x++)
    {
	gotoxy(x,23);
	cprintf("%c",2);
    }

    number(row,col,num);

    gotoxy(70,4);
    textcolor(1);
    cprintf("%d",score);

    x=1,y=23;
    while(1)
    {
	if(kbhit())
	{
	    k=getch();
	}
	if(k==27)
	  break;

	box();
	textcolor(8);
	gotoxy(x,y);
	cprintf("%c",177);
	delay(100);
	gotoxy(x,y);
	printf(" ");

	if((x>=4 && x<=10) && (y>=2 && y<=5))
	{
	    gotoxy(45,8);
	    textcolor(1);
	    cprintf("GAME OVER");
	    delay(1000);
	    terminate();
	    exit(k=0);
	}

	if((y>=5 && y<=9) && x==14)
	{
	    gotoxy(45,8);
	    textcolor(1);
	    cprintf("GAME OVER");
	    delay(1000);
	    terminate();
	    exit(k=0);
	}

	if((x>=20 && x<=25) && (y==8 ||y==11))
	{
	    gotoxy(45,8);
	    textcolor(1);
	    cprintf("GAME OVER");
	    delay(1000);
	    terminate();
	    exit(k=0);
	}
	if((y>=8 && y<=10) && x==20)
	{
	    gotoxy(45,8);
	    textcolor(1);
	    cprintf("GAME OVER");
	    delay(1000);
	    terminate();
	    exit(k=0);
	}
	if((y>=12 && y<=14) && x==25)
	{
	    gotoxy(45,8);
	    textcolor(1);
	    cprintf("GAME OVER");
	    delay(1000);
	    terminate();
	    exit(k=0);
	}
	if((x>=20 && x<=24) && y==14)
	{
	    gotoxy(45,8);
	    textcolor(1);
	    cprintf("GAME OVER");
	    delay(1000);
	    terminate();
	    exit(k=0);
	}

	if((y>=12 && y<=17) && (x==30 && x==37))
	{
	    gotoxy(45,8);
	    textcolor(1);
	    cprintf("GAME OVER");
	    delay(1000);
	    terminate();
	    exit(k=0);
	}

	if((x>=31 && x<=36) && y==15)
	{
	    gotoxy(45,8);
	    textcolor(1);
	    cprintf("GAME OVER");
	    delay(1000);
	    terminate();
	    exit(k=0);
	}

	if((x>=39 && x<=43) && (y>=16 && y<=20))
	{
	    gotoxy(45,8);
	    textcolor(1);
	    cprintf("GAME OVER");
	    delay(1000);
	    terminate();
	    exit(k=0);
	}

	if((x>=44 && x<=49) && (y>=15 && y<=20))
	{
	    gotoxy(45,8);
	    textcolor(1);
	    cprintf("GAME OVER");
	    delay(1000);
	    terminate();
	    exit(k=0);
	}

	if((y>=19 && y<=23) && x==54)
	{
	    gotoxy(45,8);
	    textcolor(1);
	    cprintf("GAME OVER");
	    delay(1000);
	    terminate();
	    exit(k=0);
	}

	if((x>=55 && x<=59) && y==23)
	{
	    gotoxy(45,8);
	    textcolor(1);
	    cprintf("GAME OVER");
	    delay(1000);
	    terminate();
	    exit(k=0);
	}
	if(num==0)
	{
	    gotoxy(row,col);
	    printf("%c",2);
	    if(count<=40)
	    {
		count++;
	    }
	    else
	    {
		gotoxy(row,col);
		printf(" ");
		number(row,col,num);
	    }
	}
	else
	{
	    count=0;
	}


	if(num>=1 && num<=9)
	{
	    if(count1<=50)
	    {
		count1++;
	    }
	    else
	    {
		gotoxy(row,col);
		printf(" ");
		number(row,col,num);
		count1=0;
	    }
	}
	else
	{
	    count1=0;
	}
	//checking for the cursor position
	if((x==row) && (y==col))
	{
	    if(num==0)
	    {
		gotoxy(27,12);
		textcolor(1+128);
		cprintf("GAME OVER");
		delay(1000);
		terminate();
		exit(k=0);
	    }
	    else
	    {
		score=score+num;
		gotoxy(70,4);
		textcolor(1);
		cprintf("%d",score);
		if(score>=10)
		{
		    clrscr();
		    for(x=21;x<=54;x++)
		    {
			textcolor(0);
			gotoxy(x,11);
			cprintf("%c",205);
			gotoxy(x,15);
			cprintf("%c",205);
		    }
		    for(y=11;y<=15;y++)
		    {
			gotoxy(21,y);
			cprintf("%c",186);
			gotoxy(54,y);
			cprintf("%c",186);
		    }
		    gotoxy(21,11);
		    cprintf("%c",201);
		    gotoxy(54,11);
		    cprintf("%c",187);
		    gotoxy(54,15);
		    cprintf("%c",188);
		    gotoxy(21,15);
		    cprintf("%c",200);
		    gotoxy(24,12);
		    textcolor(1);
		    cprintf("******CONGRATULATIONS******");
		    delay(1000);
		    textcolor(1+128);
		    gotoxy(30,14);
		    cprintf("LEVEL 3 COMPLETED");
		    delay(1000);
		    textcolor(0);
		    gotoxy(33,18);
		    cprintf("WELL DONE");
		    delay(500);
		    textcolor(0);
		    gotoxy(32,23);
		    cprintf("Press ENTER");
		    getch();
		    break;
		}
		else
		{
		    number(row,col,num);
		}
	    }
	}

	if(k==77)    //right arrow
	  x++;
	if(k==80)    //downward arrow
	  y++;
	if(k==75)    //left arrow
	  x--;
	if(k==72)    // upward arrow
	  y--;
	if(x>62)
	  x=3;
	if(x<3)
	  x=62;
	if(y>23)
	  y=2;
	if(y<1)
	  y=23;

    }

}
void main()
{
    clrscr();
    textbackground(7);
    int level=1;
    int x=2,y=2;
    int k=77;

    //printing WELCOME
    welcome_screen1();
    delay(1000);

    //printing NUMBER CHASE
    welcome_screen2();
    delay(1000);

    textbackground(10);
    //printing level 1
    screen1();
    delay(1000);

    //level 1 game
    if(level==1)
    {
	textbackground(3);
	clrscr();
	level1(x,y,k);
	level++;
    }

    textbackground(10);
    //printing level 2
    screen2();
    delay(800);
    //level 2 game
    if(level==2)
    {
	textbackground(3);
	level2(x,y,k);
	level++;
    }

    textbackground(10);

    //printing level 3
    screen3();
    delay(1000);

    //level 3 game
    if(level==3)
    {
	textbackground(3);
	level3(k);
    }

    //printing the end screen
    textbackground(13);
    end_screen();
    getch();
}

